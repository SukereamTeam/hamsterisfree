name: Actions üòé

on: push

env:
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}

jobs:
  buildAndroid:
    name: Build for Android üì±
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Create LFS file list
      #   run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      # - name: Restore LFS cache
      #   uses: actions/cache@v3
      #   id: lfs-cache
      #   with:
      #     path: .git/lfs
      #     key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      # - name: Git LFS Pull
      #   run: |
      #     git lfs pull
      #     git add .
      #     git reset --hard

      # - name: Clean Up Unity Library
      #   run: |
      #     # Unity ÎπåÎìú Ï†ÑÏóê Library Ìè¥ÎçîÎ•º ÏÇ≠Ï†úÌï©ÎãàÎã§.
      #     rm -rf Library

      - name: Disk Space Cleanup
        run: |
          df -h
          sudo apt clean
          docker image prune -a --force
          docker system prune --volumes --force
          df -h

      - name: Restore Library cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-build-Android
          # restore-keys: |
          #   Library-build-
          #   Library-

      - uses: game-ci/unity-builder@v3
        with:
          targetPlatform: Android
          androidExportType: "androidPackage"
          androidKeystoreName: ki.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      - uses: actions/upload-artifact@v3
        with:
          name: build-Android
          path: build/Android

      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: build-Android

      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: build/Android
          asset_name: build-Android-v${{ github.run_number }}
          asset_content_type: application/zip

      # - name: Return license
      #   uses: game-ci/unity-return-license@v2
      #   if: always()
